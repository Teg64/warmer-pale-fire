mod imp;
mod palette;
mod style;
mod theme;

use json::ser::PrettyFormatter;
use json::Serializer;
use palette::Palette;
use serde::ser::Serialize;
use std::{fs, io};
use theme::{ThemeBuilder, Type};

fn main() -> io::Result<()> {
    let mut theme_builder = ThemeBuilder::new("Pale Fire".to_string(), Type::Dark);
    imp::add_rules(&mut theme_builder, Palette::ORIGINAL);

    let theme = theme_builder.build();
    let json: json::Value = theme.into();

    let serialized_json = {
        let mut buf = "// Do not edit directly; this file is generated by ‘src/main.rs’.\n"
            .as_bytes()
            .to_vec();

        let pretty_formatter = PrettyFormatter::with_indent(b"\t");
        let mut serializer = Serializer::with_formatter(&mut buf, pretty_formatter);

        json.serialize(&mut serializer).unwrap();

        buf.push(b'\n');

        buf
    };

    fs::write("themes/Pale Fire-color-theme.json", serialized_json)?;

    Ok(())
}
